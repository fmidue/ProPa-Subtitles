0:00:02.443,0:00:08.627
Hello, this is the video about the
first exercise in ProPa (Programming Paradigms).

0:00:08.627,0:00:14.359
And this one we got right in front of us.

0:00:14.359,0:00:20.708
So here, the task is to draw a solid circle…

0:00:20.708,0:00:26.033
A yellow solid circle and a green solid rectangle below it.

0:00:26.033,0:00:32.617
The result can also be shown on a website. I opened it here.

0:00:32.617,0:00:35.330
So, this is how it should look like.

0:00:35.330,0:00:46.670
And our task is to implement the scene as a picture, which is given here.

0:00:46.670,0:00:49.703
So, write the implementation for “scene”.

0:00:53.367,0:00:58.614
So, for this task, use CodeWorld.

0:00:58.614,0:01:03.321
And there is a guide, which you can see down below here.

0:01:03.321,0:01:05.286
I will open this one in a new tab.

0:01:08.814,0:01:11.148
This is the API of CodeWorld.

0:01:11.148,0:01:17.234
And we can use this one to find all the functions that we require

0:01:17.234,0:01:21.163
in order to draw the rectangle and the circle.

0:01:26.847,0:01:33.075
First of all, let’s draw the rectangle.

0:01:35.611,0:01:40.000
Let’s search for “rectangle” within the API.
*presses Ctrl + f*

0:01:40.000,0:01:43.550
And there we have a function which is “rectangle”

0:01:43.550,0:01:45.550
and a function “solidRectangle”

0:01:46.444,0:01:48.982
And we want to try “solidRectangle”

0:01:48.982,0:01:53.143
This is the one that we shall use.

0:01:54.309,0:01:59.891
And here it says a solid rectangle is defined with its width and its height.

0:01:59.891,0:02:05.605
So, we have just two parameters. (as given here)

0:02:12.112,0:02:18.321
So, we can just draw a solid rectangle.

0:02:20.224,0:02:28.355
And let’s just say: 10 and 2 (in size)

0:02:28.355,0:02:39.187
And then we can use the features of CodeWorld API

0:02:39.187,0:02:41.395
That will draw our rectangle.

0:02:42.088,0:02:45.505
So now, we see that the rectangle is black.

0:02:45.505,0:02:48.165
We want to have a green rectangle.

0:02:53.192,0:02:55.889
It is also not wide enough;

0:02:55.889,0:02:58.382
So, this one covers the whole page, and this one,

0:02:58.382,0:02:59.701
maybe half of it.

0:03:00.500,0:03:01.701
So, how can we fix this?

0:03:01.701,0:03:03.701
The first parameter is the width,

0:03:03.701,0:03:08.640
as we can see that the object is wide and not very tall.

0:03:08.640,0:03:09.892
We can this by the numbers.

0:03:12.851,0:03:16.117
When we increase the size, we should get a rectangle

0:03:16.117,0:03:17.510
which covers the whole page.

0:03:18.341,0:03:20.887
Let’s, first of all, do this.

0:03:20.887,0:03:26.622
Now we see… oh yeah, it covers the whole page.

0:03:28.125,0:03:33.910
And then we want to have this rectangle in a different color.

0:03:34.685,0:03:40.326
So, let’s just do a search for “color”.

0:03:41.148,0:03:46.531
And there we have a function “colored” which

0:03:46.531,0:03:48.766
takes a Color and a Picture.

0:03:48.766,0:03:54.125
So, we can change the color of a Picture

0:03:54.125,0:03:57.092
by just applying this function.

0:03:57.092,0:03:59.092
And then we have colors

0:03:59.931,0:04:03.589
and there we have green defined.

0:04:03.589,0:04:05.965
So, we can simply use that one.

0:04:06.678,0:04:12.652
So: colored … (use green)

0:04:13.357,0:04:15.592
and then we apply the “solidRectangle”.

0:04:15.592,0:04:17.478
Also, here is an error message.

0:04:17.478,0:04:18.871
Something is wrong.

0:04:18.871,0:04:22.800
Of course, the second parameter has to be in brackets.

0:04:22.800,0:04:26.013
So, we simply write it like this.

0:04:28.902,0:04:32.473
And if we apply this one, then

0:04:32.473,0:04:36.167
we get our green rectangle.

0:04:40.184,0:04:44.583
Now, that’s just a part of the story.

0:04:46.086,0:04:48.533
As we want to increase a Picture size…

0:04:48.533,0:04:54.100
Let's just say we want to define our code a bit better.

0:04:54.100,0:04:56.664
So, let me extract this part here.

0:04:56.664,0:05:01.721
Let’s say we call this one “greenRectangle”

0:05:01.721,0:05:03.936
because we can name values in Haskell.

0:05:03.936,0:05:11.365
So, “greenRectangle” is defined exactly as this one here.

0:05:12.539,0:05:18.966
So, now, running this one… again,

0:05:18.966,0:05:21.412
we get a green rectangle.

0:05:21.412,0:05:27.431
But there is something missing for the green rectangle definition here,

0:05:27.431,0:05:35.800
which is a good way of implementing code,

0:05:35.800,0:05:42.615
because we have not said what kind of value greenRectangle is.

0:05:43.625,0:05:48.033
But we actually know it is a Picture.

0:05:48.033,0:05:54.378
So, we can say greenRectangle is a Picture.

0:05:56.022,0:05:57.180
Apply this one here.

0:05:57.180,0:06:04.207
...

0:06:04.207,0:06:07.546
And secondly, we want a yellow circle.

0:06:15.462,0:06:17.465
Well... we have no yellow circle yet.

0:06:20.542,0:06:28.676
We can just say “yellowCircle = blank”
just to fill something in.

0:06:28.676,0:06:35.000
So, now it shall draw the green rectangle.

0:06:35.500,0:06:38.208
Now we have to define the yellow circle.

0:06:39.101,0:06:41.927
We can, again, look into the API

0:06:41.927,0:06:46.106
and search for “circle” because this is

0:06:46.106,0:06:48.837
what we want to define here as well.

0:06:50.904,0:06:52.719
There is an example given.

0:06:54.170,0:06:59.802
There is also the definition for this function.

0:06:59.802,0:07:05.728
So, this draws a thin circle, but we want to

0:07:05.728,0:07:09.047
have a solid circle. So, we use “solidCircle”

0:07:09.611,0:07:14.735
And we just give the radius in order to draw a circle.

0:07:19.080,0:07:23.993
We might just say: solidCircle…

0:07:24.768,0:07:29.097
and let’s just say the radius is 2.

0:07:36.167,0:07:40.571
It’s on top of our green rectangle.

0:07:43.672,0:07:47.762
But it is black and bigger.

0:07:48.396,0:07:50.164
Why is it bigger?

0:07:50.164,0:07:51.979
Because we have to give the radius.

0:07:51.979,0:07:56.425
and the rectangle is just 2 in height.

0:07:56.425,0:07:59.438
So, our circle shall be 2 in height.

0:07:59.438,0:08:02.192
It has to have the size 1.

0:08:07.360,0:08:15.000
And now we want to have our circle in yellow.

0:08:16.151,0:08:17.764
We need to color it.

0:08:18.187,0:08:20.096
Again, we can use “colored”

0:08:21.553,0:08:24.533
in order to change the color of the circle.

0:08:30.616,0:08:32.616
There is no error.

0:08:33.039,0:08:37.223
So, it seems we can use this function.

0:08:38.867,0:08:40.867
Yellow is a predefined color.

0:08:40.867,0:08:43.877
We can have it here.

0:08:48.457,0:08:54.286
Again, we haven’t said what yellowCircle is a value of.

0:08:54.826,0:08:56.361
So, this is a Picture, again.

0:08:56.361,0:08:59.092
We defined yellowCircle as a Picture.

0:09:01.864,0:09:06.471
Now, the circle is not in the right place.

0:09:06.471,0:09:12.182
So, we have to move the circle somehow.

0:09:12.957,0:09:18.081
And therefore, we have a function

0:09:19.161,0:09:25.000
which is called “translated” which translates

0:09:25.000,0:09:28.468
the Picture in these directions.

0:09:28.770,0:09:31.232
So, we have to give the values here.

0:09:33.652,0:09:38.004
We can say: translated… and then 2 values

0:09:39.343,0:09:48.675
Let’s just say we have 4 and 0.

0:09:48.675,0:09:51.333
Let’s see how this turns out.

0:09:53.776,0:09:58.407
Oh… And we need to have this in brackets, again.

0:09:59.441,0:10:02.125
So now, apply this one.

0:10:07.762,0:10:10.000
This is in the wrong direction.

0:10:10.933,0:10:16.376
We want to have this circle above the rectangle

0:10:16.376,0:10:21.030
and not on top of it.

0:10:21.030,0:10:25.854
So, we mixed up the values up here.

0:10:25.854,0:10:29.478
So, this is the horizontal value.

0:10:29.478,0:10:30.753
And this is the vertical one.

0:10:30.753,0:10:34.095
So, we should have something here.

0:10:35.927,0:10:41.031
Let’s just say 4 here and 0 here.

0:10:41.289,0:10:43.289
And we apply this one.

0:10:45.000,0:10:48.738
and we see our circle right above the rectangle.

0:10:48.738,0:10:53.208
Actually it should be a bit further away compared to

0:10:53.208,0:10:54.483
the picture on the right.

0:10:54.483,0:10:57.755
So, let’s maybe say 6.

0:10:59.329,0:11:02.648
And yeah, this looks quite good.

0:11:03.000,0:11:07.986
So now, we have drawn our green rectangle

0:11:07.986,0:11:10.103
and the yellow circle above it.

0:11:10.103,0:11:12.996
And we are done with this task.
